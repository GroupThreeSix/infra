name: Cluster Manager Finish Provisioning

on:
  push:
    branches:
      - master

permissions: write-all

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_VAR_backend_resource_group_name: ${{ vars.TF_VAR_backend_resource_group_name }}
  TF_VAR_backend_storage_account_name: ${{ vars.TF_VAR_backend_storage_account_name }}
  TF_VAR_backend_container_name: ${{ vars.TF_VAR_backend_container_name }}
  TF_VAR_backend_key_name: ${{ vars.TF_VAR_backend_key_name }}
  TF_VAR_github_token: ${{ secrets.GH_TOKEN }}
  TF_VAR_github_user: ${{ secrets.GH_USER }}
jobs:
  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.0
          terraform_wrapper: false

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./infra
          framework: terraform
          output_format: cli,sarif
          output_file: results.sarif
          soft_fail: true

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: results.sarif

      - name: Terraform Init
        id: init
        run: |
            terraform init \
            -backend-config="resource_group_name=${{ env.TF_VAR_backend_resource_group_name }}" \
            -backend-config="storage_account_name=${{ env.TF_VAR_backend_storage_account_name }}" \
            -backend-config="container_name=${{ env.TF_VAR_backend_container_name }}" \
            -backend-config="key=${{ env.TF_VAR_azure_environment || 'dev' }}.${{ env.TF_VAR_backend_key_name }}.tfstate"

      - name: Terraform Format
        id: format
        run: terraform fmt -recursive

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Refresh
        id: refresh
        run: terraform refresh

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan

      - name: Get timestamp
        id: get-timestamp
        run: |
          echo "TIMESTAMP_PLAN=$(date +'%d-%m-%Y-%H')" >> $GITHUB_ENV

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan_${{ env.TIMESTAMP_PLAN }}
          path: ${{ github.workspace }}/infra/tfplan
          retention-days: 1

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply tfplan